option optimize_for = LITE_RUNTIME;

// Encapsulates data sent to SiteWhere.
message SiteWhere {

	enum Command {REGISTER = 1; ACKNOWLEDGE = 2; DEVICELOCATION = 3; DEVICEALERT = 4; DEVICEMEASUREMENT = 5; } 
	
	// Header contains the command and originator.
	message Header {
		required Command command = 1;
		optional string originator = 2;
	}

	// Register a device with SiteWhere.
	message RegisterDevice {
		required string hardwareId = 1;
		required string specificationToken = 2;
	}

	// Acknowledge previous command.
	message Acknowledge {
		required string hardwareId = 1;
		optional string message = 2;
	}

	// Report device location.
	message DeviceLocation {
		required string hardwareId = 1;
		required string latitude = 2;
		required string longitude = 3;
		required string elevation = 4;
		optional int64 eventDate = 5;
	}

	// Report device alert.
	message DeviceAlert {
		required string hardwareId = 1;
		required string alertType = 2;
		required string alertMessage = 3;
		optional int64 eventDate = 4;
	}

	// Report device measurement.
	message DeviceMeasurement {
		required string hardwareId = 1;
		required string measurementId = 2;
		required string measurementValue = 3;
		optional int64 eventDate = 4;
	}
}

// Encapsulates data received from SiteWhere.
message Device {

	enum Command {REGISTER_ACK = 1; } 
	
	// Header contains the command and originator.
	message Header {
		required Command command = 1;
		optional string originator = 2;
	}

	// Enumeration of registation state responses.
	enum RegistrationAckState {NEW_REGISTRATION = 1; ALREADY_REGISTERED = 2; REGISTRATION_ERROR = 3;} 
	enum RegistrationAckError {INVALID_SPECIFICATION = 1; SITE_TOKEN_REQUIRED = 2; } 

	// Acknowledges registration.
	message RegistrationAck {
		required RegistrationAckState state = 1;
		optional RegistrationAckError errorType = 2;
		optional string errorMessage = 3;
	}
}