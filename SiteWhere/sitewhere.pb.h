/* Automatically generated nanopb header */
/* Generated by nanopb-0.2.5 at Thu Jan 30 15:45:47 2014. */

#ifndef _PB_SITEWHERE_PB_H_
#define _PB_SITEWHERE_PB_H_
#include <pb.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _sitewhere_Command {
    sitewhere_Command_REGISTER = 2,
    sitewhere_Command_ACKNOWLEDGE = 3,
    sitewhere_Command_DEVICELOCATION = 4,
    sitewhere_Command_DEVICEALERT = 5,
    sitewhere_Command_DEVICEMEASUREMENTS = 6
} sitewhere_Command;

/* Struct definitions */
typedef struct _sitewhere__type_acknowledge {
    pb_callback_t invocationToken;
} sitewhere__type_acknowledge;

typedef struct _sitewhere__type_deviceAlert {
    pb_callback_t hardwareId;
    pb_callback_t type;
    pb_callback_t message;
    bool has_eventDate;
    int64_t eventDate;
    pb_callback_t invocationToken;
} sitewhere__type_deviceAlert;

typedef struct _sitewhere__type_deviceLocation {
    pb_callback_t hardwareId;
    float latitude;
    float longitude;
    bool has_elevation;
    float elevation;
    bool has_eventDate;
    int64_t eventDate;
    pb_callback_t invocationToken;
} sitewhere__type_deviceLocation;

typedef struct _sitewhere__type_measurement {
    pb_callback_t measurementId;
    float value;
} sitewhere__type_measurement;

typedef struct _sitewhere__type_registerDevice {
    char hardwareId[50];
    char specificationToken[50];
    bool has_replyTo;
    char replyTo[50];
} sitewhere__type_registerDevice;

typedef struct _sitewhere__type_deviceMeasurements {
    pb_callback_t hardwareId;
    pb_callback_t measurement;
    bool has_eventDate;
    int64_t eventDate;
    pb_callback_t invocationToken;
} sitewhere__type_deviceMeasurements;

typedef struct _sitewhere {
    sitewhere_Command _command;
    bool has_registerDevice;
    sitewhere__type_registerDevice registerDevice;
    bool has_acknowledge;
    sitewhere__type_acknowledge acknowledge;
    bool has_deviceLocation;
    sitewhere__type_deviceLocation deviceLocation;
    bool has_deviceAlert;
    sitewhere__type_deviceAlert deviceAlert;
    bool has_deviceMeasurements;
    sitewhere__type_deviceMeasurements deviceMeasurements;
} sitewhere;

/* Default values for struct fields */

/* Field tags (for use in manual encoding/decoding) */
#define sitewhere__type_acknowledge_invocationToken_tag 1
#define sitewhere__type_deviceAlert_hardwareId_tag 1
#define sitewhere__type_deviceAlert_type_tag     2
#define sitewhere__type_deviceAlert_message_tag  3
#define sitewhere__type_deviceAlert_eventDate_tag 4
#define sitewhere__type_deviceAlert_invocationToken_tag 5
#define sitewhere__type_deviceLocation_hardwareId_tag 1
#define sitewhere__type_deviceLocation_latitude_tag 2
#define sitewhere__type_deviceLocation_longitude_tag 3
#define sitewhere__type_deviceLocation_elevation_tag 4
#define sitewhere__type_deviceLocation_eventDate_tag 5
#define sitewhere__type_deviceLocation_invocationToken_tag 6
#define sitewhere__type_measurement_measurementId_tag 1
#define sitewhere__type_measurement_value_tag    2
#define sitewhere__type_registerDevice_hardwareId_tag 1
#define sitewhere__type_registerDevice_specificationToken_tag 2
#define sitewhere__type_registerDevice_replyTo_tag 3
#define sitewhere__type_deviceMeasurements_hardwareId_tag 1
#define sitewhere__type_deviceMeasurements_measurement_tag 2
#define sitewhere__type_deviceMeasurements_eventDate_tag 3
#define sitewhere__type_deviceMeasurements_invocationToken_tag 4
#define sitewhere__command_tag                   1
#define sitewhere_registerDevice_tag             2
#define sitewhere_acknowledge_tag                3
#define sitewhere_deviceLocation_tag             4
#define sitewhere_deviceAlert_tag                5
#define sitewhere_deviceMeasurements_tag         6

/* Struct field encoding specification for nanopb */
extern const pb_field_t sitewhere_fields[7];
extern const pb_field_t sitewhere__type_registerDevice_fields[4];
extern const pb_field_t sitewhere__type_acknowledge_fields[2];
extern const pb_field_t sitewhere__type_deviceLocation_fields[7];
extern const pb_field_t sitewhere__type_deviceAlert_fields[6];
extern const pb_field_t sitewhere__type_measurement_fields[3];
extern const pb_field_t sitewhere__type_deviceMeasurements_fields[5];

/* Maximum encoded size of messages (where known) */
#define sitewhere__type_registerDevice_size      156

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
